---
import { Image } from 'astro:assets';
import { getCollection } from 'astro:content';
import Layout from '@/layouts/Layout.astro';
import Card from '@/components/Card.astro';
import logo from '@/images/logo.png';
import earth from '@/images/earth.png';

const allProjects = (await getCollection('projects', ({ data }) => (import.meta.env.PROD ? !data.draft : true))).sort(
  (a, b) => b.data.sortOrder - a.data.sortOrder
);
---

<script>
  const timeEl = document.querySelector('#time');

  function updateTime() {
    const now = new Date().toLocaleTimeString(navigator.language, {
      timeZone: 'America/New_York',
      hour: 'numeric',
      minute: 'numeric',
      timeZoneName: 'short',
    });
    if (timeEl && now !== timeEl.textContent) {
      timeEl.textContent = now;
    }
  }

  updateTime();
  setInterval(updateTime, 1000);
</script>

<Layout title="Ash Johns | Portfolio">
  <h1>Welcome to my <span class="text-gradient">portfolio</span></h1>
  <ul class="at-a-glance">
    <li>
      <!-- <svg
        class="icon"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 24 24"
        stroke-width="1.5"
        stroke="currentColor"
        class="size-6"
      >
        <path
          stroke-linecap="round"
          stroke-linejoin="round"
          d="m6.75 7.5 3 2.25-3 2.25m4.5 0h3m-9 8.25h13.5A2.25 2.25 0 0 0 21 18V6a2.25 2.25 0 0 0-2.25-2.25H5.25A2.25 2.25 0 0 0 3 6v12a2.25 2.25 0 0 0 2.25 2.25Z"
        ></path>
      </svg> -->
      Frontend / Fullstack Developer
    </li>
    <li>
      <div class="avatar">
        <Image src={logo} alt="logo" loading="eager" class="logo" />
        <div class="status"></div>
      </div>
      Open for work
    </li>
    <li class="time-li">
      <Image src={earth} alt="" class="earth" />
      <div class="time-card">
        <div id="time" class="time"></div>
        Boston, MA
      </div>
    </li>
  </ul>
  <ul role="list" class="link-card-grid">
    {
      allProjects.map((project) => (
        <Card
          href={`projects/${project.slug}`}
          title={project.data.title}
          body={project.data.description}
          image={project.data.thumbnail}
          imageLoading="eager"
        />
      ))
    }
  </ul>
</Layout>

<style define:vars={{ earth: `url("${earth.src}")` }}>
  .at-a-glance {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(18ch, 1fr));
    gap: 2rem;
    padding: 0;
    list-style: none;

    li {
      display: flex;
      align-items: center;
      gap: 0.5em;
      border-radius: 8px;
      border: 1px solid rgba(255, 255, 255, 0.1);
      padding: 1rem 1.5rem;
      background: rgba(var(--background-subtle), 0.5);
    }

    .time-li {
      overflow: hidden;
    }

    .time {
      font-family: var(--font-mono);
      font-size: var(--fs-subtle);
      color: rgba(var(--foreground), 0.6);
    }

    .earth {
      display: block;
      width: 25%;
      height: auto;
      transform: scale(200%) translateX(-30%);
      filter: drop-shadow(0 0 3px rgba(59, 112, 211, 0.5));
    }
  }

  .icon {
    height: 1.5em;
    color: rgb(var(--accent));
  }

  @keyframes ping {
    from {
      transform: scale(100%);
      opacity: 1;
    }
    to {
      transform: scale(200%);
      opacity: 0;
    }
  }

  .avatar {
    position: relative;

    &::before {
      content: '';
      position: absolute;
      bottom: -6px;
      right: -6px;
      margin: 5px;
      border-radius: 50%;
      width: 14px;
      height: 14px;
      background: rgb(var(--background));
    }
  }

  .logo {
    display: block;
    height: 1.5em;
    width: auto;
  }

  .status {
    position: relative;

    &::before,
    &::after {
      content: '';
      position: absolute;
      bottom: -4px;
      right: -4px;
      margin: 5px;
      border-radius: 50%;
      width: 10px;
      height: 10px;
      background: rgb(0, 204, 92);
    }

    &::before {
      transform-origin: center;
      animation: ping 1s ease-out infinite;
    }

    &::after {
      background: rgb(0, 204, 92);
    }
  }

  .link-card-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(26ch, 1fr));
    gap: 2rem;
    margin-top: 2rem;
    padding: 0;
  }
</style>
